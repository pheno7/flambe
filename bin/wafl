#!/usr/bin/env python
#
# Locates a Flambe haxelib install and runs its bundled waf

import os, subprocess, sys
env = os.environ
join = os.path.join

try:
    # The directory containing all installed versions of flambe
    lib = join(subprocess.check_output(["haxelib", "config"]).rstrip().decode("utf-8"), "flambe")

    # Use the dev version if it exists, otherwise try the current stable
    try:
        with open(join(lib, ".dev")) as f:
            flambe_root = join(f.read(), "..")
    except IOError:
        with open(join(lib, ".current")) as f:
            flambe_root = join(lib, f.read().replace(".", ","))

except Exception:
    print("Could not locate Flambe, run `haxelib install flambe`.")
    sys.exit(1)

# We can't just use runpy because waf contains null bytes, so open and exec it manually, leaving out
# the binary section
waf = join(flambe_root, "bin", "waf")
with open(waf, "rb") as f:
    src = bytearray()
    terminator = "#==>\n".encode()
    for line in f:
        if line == terminator: break
        src += line

    # Let waf find our custom tools
    sys.path.insert(0, join(flambe_root, "tools", "waf"))
    sys.argv[0] = waf # Kinda silly

    exec(compile(src, waf, "exec"))
